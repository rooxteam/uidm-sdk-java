buildscript {
    repositories {
        if (project.hasProperty('rooxExternalAccess')) {
            mavenLocal()
            mavenCentral()
        } else {
            maven { url 'http://nexus.rooxintra.net/content/repositories/releases' }
            maven { url 'http://nexus.rooxintra.net/content/repositories/public' }
        }
    }
    dependencies {
        classpath("com.rooxteam.corporate:gradle-plugins:$rooxGradlePlugins")
    }
}

plugins {
    // for configuration see gradle/jcenter.gradle
    id "com.jfrog.bintray" version "1.8.4"
}


apply plugin: 'roox-doc'
apply plugin: 'roox-jar'
apply plugin: 'war'
apply from: 'gradle/jcenter.gradle'

// give test dependencies access to compileOnly dependencies to emulate providedCompile
configurations {
    testImplementation.extendsFrom compileOnly
}

sourceCompatibility = JavaVersion.VERSION_1_6
targetCompatibility = JavaVersion.VERSION_1_6

dependencies {

    compile(project(':auth-lib-servletfilter'))

    //auth-lib-common dependency
    compile("io.micrometer:micrometer-core:$micrometerVersion")
    compile("commons-configuration:commons-configuration:$apacheConfigurationVersion")

    // for compiling upon servlet api
    compileOnly("javax.servlet:servlet-api:${servletVersion}")
    
    // for testing
    testCompile("junit:junit:$junitVersion")
    testCompile("org.mockito:mockito-all:$mockitoVersion")
    testCompile('javax.servlet:servlet-api:2.5')
}

javadoc {
    options.charSet = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.10.2'
}
